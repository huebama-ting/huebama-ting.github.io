# Simple workflow for deploying static content to GitHub Pages
name: Build and deploy static content to Pages

on:
  push:
    # Runs on pushes targeting the default branch
    branches: ["main"]

    # Run on pushes changing files in src, index.html or pnpm-lock.yaml
    paths:
      [".github/workflows/deploy.yml", "src/**", index.html, pnpm-lock.yaml]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow read of repository
permissions:
  contents: read

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        id: checkout

      - uses: actions/setup-node@v4
        name: Set up Node
        id: node-install
        with:
          node-version: 20
          check-latest: true

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: get-pnpm-cache-directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        id: setup-pnpm-cache
        with:
          path: ${{ steps.get-pnpm-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        id: install-packages
        run: pnpm install

      - name: Copy secrets to .env
        id: copy-secrets
        run: echo "VITE_COOP_ROUTE_ACCESS_CODE=${{ secrets.COOP_ROUTE_ACCESS_CODE }}" > .env

      - name: Build
        id: build
        run: pnpm run build

      - name: Setup Pages
        id: setup-pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist repository
          path: "dist"

  deploy:
    needs: build

    # Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
